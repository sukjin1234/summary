set : 집합에 관련한 것을 쉽게 처리하기 위해 만든 자료형
    형태 : {값1,값2,...}
    특징 : 중복 불허, 순서 없음 (인덱싱으로 값을 얻을 수 없음)

    isc1 = s0 & s1  #교집합

    uni1 = s0 | s1  #합집합

    dif1 = s0 - s1  #차집합

    s1.add(값)  -  특정값 추가
    s1.update([4,5,6])  -  여러값 추가
    s1.remove(값)  -  특정값 삭제

함수(function)
    입력을 받아서, 출력(결과)를 생성한다.       해당 결과는 하나만 출력, 입력은 안 받을 수도 있음음
    사용하는 이유 :                                 
        반복적으로 사용하는 가치있는 부분을 묶어서 사용하는 것
        전체 흐름을 단계적으로 만든다
    
    정의(definition):                          호출(call):
        def 함수이름(매개변수,...):                변수 = 함수이름(입력인수1, ...)
            실행문장 ...
            return 결과값

    python은 return 값이 없으면 None을 출력

매개변수와 인수
    정의 : 매개변수  ,  호출 : 인수
    종류
        # 위치형 매개변수 positional argument (기본방식)
            정의한 매개변수 순서대로 지정하고 호출하기
        # 키워드 매개변수 keyword argument
            매개변수 지정하여 호출하기
        # 기본값 매개변수 default value argument
            매개변수에 기본값을 설정하여, 매개변수에 값을 지정하지 않고 호출하기 
                맨 뒤 매개변수부터 기본값을 지정할 수 있음

    ex)  def test(a, b, c, d=10):
            print(a, b, c, d)

        test(1,2,3,4) # 위치형 매개변수
        test(b=2, a=1, c=3, d=4) # 키워드 매개변수
        test(1,2,3) # 기본값 매개변수

결과값 반환 : return
    결과값을 호출한 쪽으로 전달한다 (동시에 함수 종료)
    return이 전달하는 결과값은 ONLY ONE     -> 여러 개를 반환할 경우 Tuple로 만들어서 반환
    
    ex) def add_and_mull(a,b):
            return a+b, a*b    -> tuple로 변환

함수 밖에서 지정한 변수 : 전역변수
     안에서             : 지역변수

가변 매개변수 : *매개변수                                  def 함수이름(*매개변수):
    인수의 개수가 정해져 있지 않는 경우에 사용                  실행문장 ...
    관련 자료형 : Tuple
            가변 매개변수는 항상 뒤에 와야함

키워드 매개변수 : **매개변수                                def 함수이름(**매개변수):
    인수의 개수가 정해져 있지 않는 경우에 사용                  실행문장 ...
    관련 자료형 : Dictionary
    단, 가변 매개변수와 달리 key = 값  형태로 인수를 전달
