리스트 : 가변길이를 가지고 있음
    순서가 있는 항복의 모음
    모든 종류의 값을 요소로 넣을 수 있음 -> 구성요소 한정 X
    [] 대괄호로 표현, 요소는 , 콤마로 구분

        list_1 = list()
        list_2 = []       빈 리스트트

인덱싱, 슬라이싱 문자열과 동일하게 작용 
    리스트 인덱싱의 결과는 요소 타입
           슬라이싱의 결과는 리스트 타입

리스트 연결 : + , 반복 : *              del 리스트 이름 : 삭제

append() : 리스트 끝에 요소를 추가
insert() : 리스트 특정 위치에 요소를 삽입 (인덱스 위치, 넣을 요소)
remove() : 리스트 앞에서 검색해서 일치하는 요소 하나를 삭제
pop() : 리스트의 뒤부터 검색해서 일치하는 요소를 제거하고 반환                      -|
index() : 리스트의 뒤부터 검색해서 일치하는 요소를 제거하고 반환, 못찾 오류        -| 반환 함수
count() : 리스트에 포함된 요소의 개수                                               -|
extend() : 리스트에 다른 리스트를 추가 (+= 연산자와 동일)
sort() : 리스트의 정렬 (원본 손상) <-> sorted()
reverse() : 리스트의 요소 순서를 반대로 변경

Tuple
    모든 종류의 값이나 넣을 수 있음 -> 구성 요소 한정 X
    투플에 들어있는 요소는 서로 연관될 필요가 없음
    () 괄호로 표현, 요소는 , 콤마로 구분
    * Tuple 생성후 요소의 변경(생성, 삭제, 수정)은 불가능 
    +,* 연산 리스트와 동일 

제어문 
    순차구조 : 차례대로 실행
    
if 조건문
    실행 상황을 판단하고 그 판단 결과에 따라 상황을 수행하는 것을 돕는 문장
    참(True), 거짓(False)를 판단하는 식식

    if 조건식 :                 if 조건식 :             if 조건식 :
        수행문장1                   수행문장1               수행문장1
        ...                         ...                     ...
        수행문장n               else                    elif 조건식 :
                                    수행문장n               ...
                                                        else:
                                                            ...
블록은 들여쓰기로 구분

논리 연산자                     **멤버십 연산자
    and, or, not                    특정 값이 sequence나 collection에 포함되어 있는지 여부를 확인할 때 사용
                                    in, not in
조건부 표현식
    일종의 파이썬 삼항 연산자

    if score >= 60:
        message = "succ"     -->    message = "succ" if score >= 60 else "fail"
    else:
        message = "fail"

